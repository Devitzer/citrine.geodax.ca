"use strict";(self.webpackChunkcitrine_script_documentation=self.webpackChunkcitrine_script_documentation||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Functions","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Keywords - let, static, import, etc.","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"let","href":"/docs/functions/Keywords/let","docId":"functions/Keywords/let"},{"type":"link","label":"static","href":"/docs/functions/Keywords/static","docId":"functions/Keywords/static"},{"type":"link","label":"import","href":"/docs/functions/Keywords/import","docId":"functions/Keywords/import"},{"type":"link","label":"if","href":"/docs/functions/Keywords/if","docId":"functions/Keywords/if"},{"type":"link","label":"else","href":"/docs/functions/Keywords/else","docId":"functions/Keywords/else"},{"type":"link","label":"else if","href":"/docs/functions/Keywords/else_if","docId":"functions/Keywords/else_if"}],"href":"/docs/category/keywords---let-static-import-etc"},{"type":"category","label":"io - in out","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"io.print()","href":"/docs/functions/io/print","docId":"functions/io/print"},{"type":"link","label":"io.error()","href":"/docs/functions/io/error","docId":"functions/io/error"},{"type":"link","label":"io.dir()","href":"/docs/functions/io/dir","docId":"functions/io/dir"}],"href":"/docs/category/io---in-out"},{"type":"category","label":"sys - the system","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"sys.exit()","href":"/docs/functions/sys/exit","docId":"functions/sys/exit"},{"type":"link","label":"sys.sleep()","href":"/docs/functions/sys/sleep","docId":"functions/sys/sleep"}],"href":"/docs/category/sys---the-system"},{"type":"category","label":"fs - file system","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Disclaimer: must be imported","href":"/docs/functions/fs/disclaimer","docId":"functions/fs/disclaimer"},{"type":"link","label":"fs.readFile()","href":"/docs/functions/fs/readFile","docId":"functions/fs/readFile"},{"type":"link","label":"fs.writeFile()","href":"/docs/functions/fs/writeFile","docId":"functions/fs/writeFile"},{"type":"link","label":"fs.deleteFile()","href":"/docs/functions/fs/deleteFile","docId":"functions/fs/deleteFile"}],"href":"/docs/category/fs---file-system"},{"type":"category","label":"diagnostics - everything speed test","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Disclaimer: must be imported","href":"/docs/functions/diagnostics/disclaimer","docId":"functions/diagnostics/disclaimer"},{"type":"link","label":"diagnostics.time()","href":"/docs/functions/diagnostics/time","docId":"functions/diagnostics/time"},{"type":"link","label":"diagnostics.timeEnd()","href":"/docs/functions/diagnostics/timeEnd","docId":"functions/diagnostics/timeEnd"}],"href":"/docs/category/diagnostics---everything-speed-test"},{"type":"category","label":"parse - all about parsing data!","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"parse.json()","href":"/docs/functions/parse/json","docId":"functions/parse/json"},{"type":"link","label":"parse.yaml()","href":"/docs/functions/parse/yaml","docId":"functions/parse/yaml"},{"type":"link","label":"parse.toml()","href":"/docs/functions/parse/toml","docId":"functions/parse/toml"}],"href":"/docs/category/parse---all-about-parsing-data"},{"type":"category","label":"Date","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Date.unix()","href":"/docs/functions/Date/unix","docId":"functions/Date/unix"}]}],"href":"/docs/category/functions"}]},"docs":{"functions/Date/unix":{"id":"functions/Date/unix","title":"Date.unix()","description":"Returns the current unix timestamp.","sidebar":"tutorialSidebar"},"functions/diagnostics/disclaimer":{"id":"functions/diagnostics/disclaimer","title":"Disclaimer: must be imported","description":"diagnostics is a library that must be imported, you can import it like this:","sidebar":"tutorialSidebar"},"functions/diagnostics/time":{"id":"functions/diagnostics/time","title":"diagnostics.time()","description":"Starts a new time diagnostic, takes in a label.","sidebar":"tutorialSidebar"},"functions/diagnostics/timeEnd":{"id":"functions/diagnostics/timeEnd","title":"diagnostics.timeEnd()","description":"Ends an existing time diagnostic, and returns the time like this:","sidebar":"tutorialSidebar"},"functions/fs/deleteFile":{"id":"functions/fs/deleteFile","title":"fs.deleteFile()","description":"Deletes a file.","sidebar":"tutorialSidebar"},"functions/fs/disclaimer":{"id":"functions/fs/disclaimer","title":"Disclaimer: must be imported","description":"fs is a library that must be imported, you can import it like this:","sidebar":"tutorialSidebar"},"functions/fs/readFile":{"id":"functions/fs/readFile","title":"fs.readFile()","description":"Reads a file from the directory that the file was ran from and returns the contents.","sidebar":"tutorialSidebar"},"functions/fs/writeFile":{"id":"functions/fs/writeFile","title":"fs.writeFile()","description":"Overwrites or creates a new file with the contents.","sidebar":"tutorialSidebar"},"functions/io/dir":{"id":"functions/io/dir","title":"io.dir()","description":"Logs output to the console with dir method. Used for logging objects, arrays and whatnot. Supported types to log are: string | boolean | null | number | object (which is questionable but im working on it (im not working on it for a while))","sidebar":"tutorialSidebar"},"functions/io/error":{"id":"functions/io/error","title":"io.error()","description":"Logs output to the console as an error. Supported types to log are: string | boolean | null | number","sidebar":"tutorialSidebar"},"functions/io/print":{"id":"functions/io/print","title":"io.print()","description":"Logs output to the console. Supported types to log are: string | boolean | null | number","sidebar":"tutorialSidebar"},"functions/Keywords/else":{"id":"functions/Keywords/else","title":"else","description":"Else is used as an alternate for the if keyword. Basically, if the if statement returns false, it will come to the else statement.","sidebar":"tutorialSidebar"},"functions/Keywords/else_if":{"id":"functions/Keywords/else_if","title":"else if","description":"Else if is actually a combination of two keywords, else and if.","sidebar":"tutorialSidebar"},"functions/Keywords/if":{"id":"functions/Keywords/if","title":"if","description":"The if keyword is used to check conditions, returns true or false depening on what the condition is.","sidebar":"tutorialSidebar"},"functions/Keywords/import":{"id":"functions/Keywords/import","title":"import","description":"The import keyword is used to import built in libraries, and soon, user made ones.","sidebar":"tutorialSidebar"},"functions/Keywords/let":{"id":"functions/Keywords/let","title":"let","description":"The let keyword is used as a changeable variable. If you don\'t need to change a variable, don\'t use it.","sidebar":"tutorialSidebar"},"functions/Keywords/static":{"id":"functions/Keywords/static","title":"static","description":"Like the let keyword, but cannot be changed. You will get errors if you try.","sidebar":"tutorialSidebar"},"functions/parse/json":{"id":"functions/parse/json","title":"parse.json()","description":"Parses a json file. Basically if you have a lets say a \\"test.json\\" file, and you want to parse it in CitrineScript. This is what that is for.","sidebar":"tutorialSidebar"},"functions/parse/toml":{"id":"functions/parse/toml","title":"parse.toml()","description":"Parses a TOML file. Basically if you have a lets say a \\"test.toml\\" file, and you want to parse it in CitrineScript. This is what that is for.","sidebar":"tutorialSidebar"},"functions/parse/yaml":{"id":"functions/parse/yaml","title":"parse.yaml()","description":"Parses a YAML file. Basically if you have a lets say a \\"test.yaml|.yml\\" file, and you want to parse it in CitrineScript. This is what that is for.","sidebar":"tutorialSidebar"},"functions/sys/exit":{"id":"functions/sys/exit","title":"sys.exit()","description":"Exits the code with the following exit code.","sidebar":"tutorialSidebar"},"functions/sys/sleep":{"id":"functions/sys/sleep","title":"sys.sleep()","description":"Waits for the amount of milliseconds given.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Welcome to the CitrineScript documentation!","sidebar":"tutorialSidebar"}}}')}}]);