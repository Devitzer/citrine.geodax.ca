"use strict";(self.webpackChunkcitrine_script_documentation=self.webpackChunkcitrine_script_documentation||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"devlog-1","metadata":{"permalink":"/blog/devlog-1","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Devlog/2023-07-26-Devlog-1.mdx","source":"@site/blog/Devlog/2023-07-26-Devlog-1.mdx","title":"Devlog 1. Objects","description":"Hello! This is the first devlog of CitrineScript! I am Devitzer and today I will be covering what I am working on today, objects.","date":"2023-07-26T00:00:00.000Z","formattedDate":"July 26, 2023","tags":[{"label":"welcome","permalink":"/blog/tags/welcome"},{"label":"introduction","permalink":"/blog/tags/introduction"},{"label":"beginning","permalink":"/blog/tags/beginning"}],"readingTime":0.765,"hasTruncateMarker":false,"authors":[{"name":"Devitzer","title":"Lead Developer @ CitrineScript","url":"https://github.com/Devitzer","imageURL":"https://github.com/Devitzer.png","key":"devitzer"}],"frontMatter":{"slug":"devlog-1","title":"Devlog 1. Objects","authors":["devitzer"],"tags":["welcome","introduction","beginning"]},"nextItem":{"title":"Devlog 2. Runtime CLI","permalink":"/blog/devlog-2"}},"content":"Hello! This is the first devlog of CitrineScript! I am Devitzer and today I will be covering what I am working on today, **objects.**\\r\\n\\r\\n## Objects\\r\\n\\r\\nToday, I am working on Object Literals, which are the curly braces {}\\r\\nAnd so you will be able to do something like { foo: \\"bar\\" } and even just { foo } like that.\\r\\n\\r\\n## Maybes\\r\\n\\r\\nI will probably have time to work on native functions, such as print() and if I rush myself a lot, I will be able to make user defined functions and release CitrineScript! Although, even if CitrineScript is done today, I still have to make a CLI to run it, like node for JS. And set some other things to make it compatible with your devices!\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nSo that is all I have today, if I do end up working on something other than objects, I will update you. Bye!"},{"id":"devlog-2","metadata":{"permalink":"/blog/devlog-2","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Devlog/2023-07-26-Devlog-2.mdx","source":"@site/blog/Devlog/2023-07-26-Devlog-2.mdx","title":"Devlog 2. Runtime CLI","description":"Hello, welcome to Devlog 2! Made in the same day, I have some small updates to make.","date":"2023-07-26T00:00:00.000Z","formattedDate":"July 26, 2023","tags":[{"label":"welcome","permalink":"/blog/tags/welcome"},{"label":"introduction","permalink":"/blog/tags/introduction"},{"label":"beginning","permalink":"/blog/tags/beginning"}],"readingTime":0.34,"hasTruncateMarker":false,"authors":[{"name":"Devitzer","title":"Lead Developer @ CitrineScript","url":"https://github.com/Devitzer","imageURL":"https://github.com/Devitzer.png","key":"devitzer"}],"frontMatter":{"slug":"devlog-2","title":"Devlog 2. Runtime CLI","authors":["devitzer"],"tags":["welcome","introduction","beginning"]},"prevItem":{"title":"Devlog 1. Objects","permalink":"/blog/devlog-1"},"nextItem":{"title":"Introduction to the CitrineScript Blog","permalink":"/blog/introduction_to_blog"}},"content":"Hello, welcome to Devlog 2! Made in the same day, I have some small updates to make.\\r\\n\\r\\n## 1. Runtime CLI\\r\\n\\r\\nBecause of the way my language works, I was able to make a Runtime CLI in about **5 minutes.** so that is already done and ready.\\r\\n\\r\\n## 2. Objects and Others\\r\\n\\r\\nI am still working on Objects and the other \\"Maybes\\" that I listed in [Devlog 1](./2023-07-26-Devlog-1.mdx)"},{"id":"introduction_to_blog","metadata":{"permalink":"/blog/introduction_to_blog","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-07-25-welcome/index.mdx","source":"@site/blog/2023-07-25-welcome/index.mdx","title":"Introduction to the CitrineScript Blog","description":"As of making this article, CitrineScript isn\'t actually out yet. But I would still like to introduce you to my programming language!","date":"2023-07-25T00:00:00.000Z","formattedDate":"July 25, 2023","tags":[{"label":"welcome","permalink":"/blog/tags/welcome"},{"label":"introduction","permalink":"/blog/tags/introduction"},{"label":"beginning","permalink":"/blog/tags/beginning"}],"readingTime":2.37,"hasTruncateMarker":false,"authors":[{"name":"Devitzer","title":"Lead Developer @ CitrineScript","url":"https://github.com/Devitzer","imageURL":"https://github.com/Devitzer.png","key":"devitzer"}],"frontMatter":{"slug":"introduction_to_blog","title":"Introduction to the CitrineScript Blog","authors":["devitzer"],"tags":["welcome","introduction","beginning"]},"prevItem":{"title":"Devlog 2. Runtime CLI","permalink":"/blog/devlog-2"}},"content":"As of making this article, CitrineScript isn\'t actually out yet. But I would still like to introduce you to my programming language!\\n\\n## Why did I take up such a big project?\\n\\nThis is a good question, considering my last few have been simple NPM packages, and now I am suddenly taking up a whole programming language with a lexer, parser and compiler?\\n\\nWell, I decided that I needed to scale up my projects, with my basic coding knowledge of JavaScript and barely any TypeScript, I decided that I need to move on to something big, as I like to believe I can learn quick.\\n\\nSo, I made several decisions to try several new things!\\n\\n## 1. TypeScript and ESM\\n\\nI decided to use **TypeScript and ESM.** If you know me, you know that TypeScript and ESM are the two last thing\'s I would want to be stuck working on. So that\'s what I picked to lex, parse, and compile my language!\\n\\nAnd because I decided to use TypeScript and ESM, I also decided that the best runtime that supports this is:\\n\\n## 2. Deno\\n\\n**Deno.** If you know anything about developing with TypeScript and ESM *specifically,* is that Deno is the best runtime for both of these. \\nDeno is a fast and secure runtime and I am actually quite starting to enjoy it although will probably only use it for TypeScript projects.\\n\\nIf you would like to know more about Deno, check it out [here](https://deno.land).\\n\\nPS: I still love node forever, just because of it\'s simplicity.\\n\\n## Conclusion\\n\\nThis is all I have for now. Soon, there will be documentation for the two functions I plan to come out with, impressive right!?\\n\\n## 1. Some notes\\n\\nI plan to constantly implement new updates for CitrineScript, but as an independent developer which I like it that way, you cannot expect fast updates.\\n\\nIf you would like to know the specific functions I plan to implement first, well there are several. While there are two \\"functions\\" there are also some other cool features.\\n\\nHere is a small snippet of every single feature that CitrineScript will release with.\\n\\n```txt title=\\"example.ces\\"\\n// IF YOU SEE COMMENTS LIKE THIS, KNOW THAT THEY WILL NOT EXIST IN INITIAL RELEASE\\n\\nlet x = 5\\nlet x; // Semicolons only needed on expressions like this.\\nx = 5 // Let\'s keep this at 5 for now.\\n\\n// You can also set constant/static variables\\n\\nstatic y = 10\\nstatic y; // This should give an error. Because it is static.\\n\\ndeclare print_coordinates(x, y) {\\n    io.print(\\"X Coord: \\", x, \\" Y Coord: \\", y)\\n}\\n\\nprint_coordinates(x, y) // Result: X Coord: 5 Y Coord: 10\\n```\\n\\nA long enough example that shows release features. Or at least the 0.x chain.\\n\\nThat is all I have, I will update you on the development, goodbye!"}]}')}}]);